worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
  worker_connections  1024;
}


http {
  sendfile             on;
  keepalive_timeout    65;
  client_max_body_size 5M;

  upstream app {
    least_conn;
    server nuxt:3000 max_fails=3 fail_timeout=30s;
  }

  server {
    listen 80;
    listen [::]:80;

    server_tokens off;

    # remove extension from url
    rewrite ^(/.*)\.html(\?.*)?$ $1$2 permanent;
    # add trailing slash
    rewrite ^([^.]*[^/])$ $1/ permanent;
    rewrite ^(.*)/$ /$1 break;

    gzip             on;
    gzip_vary        on;
    gzip_comp_level   4;
    gzip_min_length 256;
    gzip_types
      application/javascript
      application/x-javascript
      application/json
      application/x-font-ttf
      application/x-font-woff
      application/rss+xml
      font/opentype
      image/svg+xml
      image/png
      image/jpeg
      image/x-icon
      text/javascript
      text/cache-manifest
      text/css
      text/xml
      text/plain
      text/x-component
      text/x-cross-domain-policy;

    # Force all paths to load either itself (js files) or go through index.html.
    location / {
      proxy_pass http://app;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection 'upgrade';
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_cache_bypass $http_upgrade;

      error_page 404 /404.htm;
      error_page 500 502 503 504 /500.htm;
    }

    location ~* \.(eot|otf|ttf|woff|woff2)$ {
      add_header Access-Control-Allow-Origin *;
    }

    location ~* \.(js|css|png|jpg|jpeg|svg|woff2|gif|ico)$ {
      allow all;
      expires 30d;
      add_header Pragma public;
      add_header Cache-Control "public, no-transform";
    }

    location = /robots.txt {
      allow all;
      log_not_found off;
      access_log off;
    }

    location ~/(libs|assets) {
      deny all;
      return 403;
    }

    location ~ /(config/Dockerfile|.serverless/*) {
      deny all;
      return 404;
    }
  }
}